-- Create jobs table
CREATE TABLE public.jobs (
  id bigint generated by default as identity not null,
  created_at timestamp with time zone not null default now(),
  user_id uuid null default gen_random_uuid (),
  provider_used text null,
  characters_used bigint null,
  constraint jobs_pkey primary key (id),
  constraint jobs_user_id_fkey foreign KEY (user_id) references auth.users (id) on update CASCADE on delete CASCADE
) TABLESPACE pg_default;

-- Enable Row Level Security (RLS)
ALTER TABLE public.jobs ENABLE ROW LEVEL SECURITY;

-- Create policy to allow users to view their own jobs
CREATE POLICY "Users can view own jobs" ON public.jobs
FOR SELECT TO authenticated
USING (auth.uid() = user_id);

-- Create policy to allow users to insert their own jobs
CREATE POLICY "Users can insert own jobs" ON public.jobs
FOR INSERT TO authenticated
WITH CHECK (auth.uid() = user_id);

-- Create policy to allow admin users to view all jobs
CREATE POLICY "Admin users can view all jobs" ON public.jobs
FOR SELECT TO authenticated
USING (
  EXISTS (
    SELECT 1 FROM public.profiles
    WHERE user_id = auth.uid() AND is_admin = true
  )
);

-- Create policy to allow admin users to manage all jobs
CREATE POLICY "Admin users can manage all jobs" ON public.jobs
FOR ALL TO authenticated
USING (
  EXISTS (
    SELECT 1 FROM public.profiles
    WHERE user_id = auth.uid() AND is_admin = true
  )
);

-- Create indexes for better performance
CREATE INDEX idx_jobs_user_id ON public.jobs(user_id);
CREATE INDEX idx_jobs_provider_used ON public.jobs(provider_used);
CREATE INDEX idx_jobs_created_at ON public.jobs(created_at); 